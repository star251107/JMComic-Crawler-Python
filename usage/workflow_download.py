from jmcomic import *
from jmcomic.cl import JmcomicUI

# 下方填入你要下载的本子的id，一行一个，每行的首尾可以有空白字符
jm_albums = '''
1015036
1015041
1015195
1015197
1015468
1015471
639761
1015668
1015669
497482
1015976
1015977
1018044
1018048
1015821
1015822
1016132
1016163
1016485
1016518
1017428
1017432
1017544
542853
1017555
1017575
467993
379146
649501
1016791
1016794
1016809
1016815
1017181
1017191
1016514
1015352
650419
650491
650487
650548
650573
1013108
1013127
1013154
1013191
647788
650296
1012913
1013148
652051
652133
645670
645838
645938
646014
646023
646025
646039
646041
530504
645651
641294
641380
642565
644968
644973
644527
644545
644436
626350
623632
616326
616486
616523
617010
617280
617377
617897
618037
618468
618804
618805
619259
619514
619255
619531
620143
620147
620554
620809
620858
620870
620892
617135
622706
621963
622560
622567
624108
624324
624325
625788
625790
625226
626213
626273
626285
602513
592688
615100
616074
617369
617415
600568
595982
611640
611671
608767
608770
609850
609868
610047
610621
610625
610629
592093
534938
600613
600828
601270
601772
602082
602096
602418
602613
603592
603597
604195
605898
606453
606483
607041
607339
607636
582127
600813
597966
598491
600075
600082
600089
600604
600612
600614
587838
588033
597878
597917
597459
597798
595848
595964
595969
592019
593014
593051
593138
593147
592094
593507
593609
594773
595449
585347
591609
592708
588809
590345
590488
590918
584608
588808
588842
144983
587731
587918
586524
586705
368535
585332
585708
583198
583201
583853
583855
583946
583994
584612
584619
584642
584645
581634
582084
582578
582599
542133
582621
581516
572517
580669
580880
580893
580894
580896
581071
578247
579061
579316
579352
579357
579769
579771
579774
579786
577804
577955
578081
578093
578104
578106
578107
574927
575039
575077
575303
575405
575811
575910
575925
576217
576986
577374
577384
574869
574385
572368
536114
572679
572701
572813
573028
573024
573218
573327
573333
573758
573968
574275
574361
574375
574647
572360
571927
570321
570515
570812
570911
570972
571040
571605
571676
571679
569681
565261
567742
567960
568117
568153
568323
568659
568841
568849
569071
569331
569468
569685
570069
570073
570215
570220
570222
564295
564413
567273
567329
567495
567601
564676
565634
565644
565681
566576
566625
563712
563907
563922
564020
564027
564296
564509
564514
564667
564670
564683
565068
565141
565143
565350
561687
562138
562423
562425
562526
562945
563119
563290
563291
473964
561499
561012
561040
561167
559821
560469
559474
557511
557711
557750
558262
558589
558594
558791
549005
554494
554693
556543
556656
552843
553361
554120
554551
552245
550685
550881
550887
550935
541358
551435
551722
551952
551298
548404
548616
548976
548983
549001
549200
549216
550325
550367
548140
539429
545549
545970
546310
546387
291588
546711
546725
547187
547263
547441
547444
547519
547585
547782
547583
547814
547836
172270
547857
217573
543868
544361
545435
543821
542249
542529
542641
542742
542872
542870
450055
542156
541945
541948
503130
540473
540856
540877
541135
540819
403169
540171
540192
540388
540479
539881
539267
537134
537741
536650
536764
536819
536822
536852
536851
316426
525564
527760
536405
536587
356176
532560
463946
530278
535273
535292
535596
535629
534144
532542
532913
532925
533208
533460
529463
533185
530095
530495
530565
531696
531996
532319
532554
532567
147805
527103
524857
528198
528220
529223
530190
527743
391889
528333
526436
526670
508570
526946
527115
527328
527372
527423
524377
524864
508040
302556
524060
524068
425206
523596
521644
522036
522052
522065
522081
522095
522097
479021
437520
522117
522389
522417
522498
518500
517248
520724
518001
518242
519240
519239
519461
519871
517496
517747
515007
515266
515814
517314
517319
342897
514347
511173
484408
510563
512852
512855
315934
500305
509474
510037
510455
510530
508557
508784
467180
505963
506250
506322
506479
371855
506832
507056
507057
502016
507061
507091
507208
505937
413209
506258
507371
507367
507444
462240
504291
504311
504444
505734
471887
501734
502768
502964
500533
500559
500562
500678
500685
500700
501113
501121
498461
314904
475612
496923
431896
432590
104307
481044
477910
477829
403105
477384
471040
475451
474610
465714
465716
469737
469959
469966
470910
322626
324075
429560
463814
463820
463822
465789
455877
465819
465860
465065
461806
461411
457281
446276
444530
441909
441910
441911
458801
457146
459025
459030
459041
459056
459074
455458
456937
456985
396732
452839
455032
454816
211700
446025
455025
449316
453087
395821
322549
278008
422828
451393
452829
419639
452514
447206
448137
444064
443813
443816
446022
446023
446030
446080
440577
377178
439122
441609
441622
443546
443589
441659
441901
441914
441709
440085
434531
434805
433903
433651
429343
358848
363672
418481
428360
428376
387848
428629
429087
429111
427111
423511
421055
422075
398750
422854
406360
420336
418955
241601
415791
399706
412921
408794
409654
374061
349488
386873
403876
399834
322373
404378
335442
402655
402658
402676
402686
400412
401478
400030
400027
400024
400016
399993
397183
399712
400390
399730
397770
391364
391365
62093
390353
314094
389999
387590
384189
384027
386948
386600
386715
386798
386745
308898
374213
334930
198027
324686
345399
282269
333046
339981
339441
334073
330541
228094
323313
208655
309279
318496
229730
306426
306766
230951
302092
279371
229331



'''

# 单独下载章节
jm_photos = '''



'''


def env(name, default, trim=('[]', '""', "''")):
    import os
    value = os.getenv(name, None)
    if value is None or value == '':
        return default

    for pair in trim:
        if value.startswith(pair[0]) and value.endswith(pair[1]):
            value = value[1:-1]

    return value


def get_id_set(env_name, given):
    aid_set = set()
    for text in [
        given,
        (env(env_name, '')).replace('-', '\n'),
    ]:
        aid_set.update(str_to_set(text))

    return aid_set


def main():
    album_id_set = get_id_set('JM_ALBUM_IDS', jm_albums)
    photo_id_set = get_id_set('JM_PHOTO_IDS', jm_photos)

    helper = JmcomicUI()
    helper.album_id_list = list(album_id_set)
    helper.photo_id_list = list(photo_id_set)

    option = get_option()
    helper.run(option)
    option.call_all_plugin('after_download')


def get_option():
    # 读取 option 配置文件
    option = create_option(os.path.abspath(os.path.join(__file__, '../../assets/option/option_workflow_download.yml')))

    # 支持工作流覆盖配置文件的配置
    cover_option_config(option)

    # 把请求错误的html下载到文件，方便GitHub Actions下载查看日志
    log_before_raise()

    return option


def cover_option_config(option: JmOption):
    dir_rule = env('DIR_RULE', None)
    if dir_rule is not None:
        the_old = option.dir_rule
        the_new = DirRule(dir_rule, base_dir=the_old.base_dir)
        option.dir_rule = the_new

    impl = env('CLIENT_IMPL', None)
    if impl is not None:
        option.client.impl = impl

    suffix = env('IMAGE_SUFFIX', None)
    if suffix is not None:
        option.download.image.suffix = fix_suffix(suffix)


def log_before_raise():
    jm_download_dir = env('JM_DOWNLOAD_DIR', workspace())
    mkdir_if_not_exists(jm_download_dir)

    def decide_filepath(e):
        resp = e.context.get(ExceptionTool.CONTEXT_KEY_RESP, None)

        if resp is None:
            suffix = str(time_stamp())
        else:
            suffix = resp.url

        name = '-'.join(
            fix_windir_name(it)
            for it in [
                e.description,
                current_thread().name,
                suffix
            ]
        )

        path = f'{jm_download_dir}/【出错了】{name}.log'
        return path

    def exception_listener(e: JmcomicException):
        """
        异常监听器，实现了在 GitHub Actions 下，把请求错误的信息下载到文件，方便调试和通知使用者
        """
        # 决定要写入的文件路径
        path = decide_filepath(e)

        # 准备内容
        content = [
            str(type(e)),
            e.msg,
        ]
        for k, v in e.context.items():
            content.append(f'{k}: {v}')

        # resp.text
        resp = e.context.get(ExceptionTool.CONTEXT_KEY_RESP, None)
        if resp:
            content.append(f'响应文本: {resp.text}')

        # 写文件
        write_text(path, '\n'.join(content))

    JmModuleConfig.register_exception_listener(JmcomicException, exception_listener)


if __name__ == '__main__':
    main()
